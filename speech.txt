Слайд [Вводный слайд]
    Главная мотивация - существующие ядра
    для классификации строк сильно отличаются
    от лучшего алгоритма локального выравнивания SW.

Слайд [Локальное выравнивание]
    Алфавит из 20 аминокислот или 4 нуклеотидов.
    Есть специальный символ пропуска символа.
    Будем обозначать такой алфавит X.

Слайд [Алгоритм Смита-Ватермана]
    Суть - сумма совпадающих позиций по матрице замен,
    минус сумма штрафов за пробелы
    между выровненных последовательностей

Слайд [Вычисление LA ядра]:
    наивный алгоритм - сумма по всем выравниваниям,
    растёт экспоненциально.

    Предложена модификаци SW,
    на основе динамического программирования.
    В оригинальном алгоритме заменяются
    максимум на сумму
    и берётся логирифм, делённый на бетта.

    Данный автомат выравнивает последовательность x,
    подаётся на вход,
    на выходе получаем выровненную под x y.

Слайд [Эксперимент]:
    Pairwise - для каждой последовательности
    создаётся вектор размера обучающей выборки,
    где i координата - E-value от выравнивания Смита-Ватермана.
    Потом используется радиальное базисное ядро.

    Fisher - строятся вектора из градиентов логарифма правдаподобия
    с помощью Скрытой марковской модели.

    Mismatch - исходную последовательность нарезают на 5 символьные
    блоки, добавляя к каждому блоку варианты мутаций с 1 символом.
    Сравнение идёт как пересечение множеств блоков.

    BLOSUM62 - матрица замен последовательностей, сходных на 62%.

Слайд [Результаты эксперимента]
    
